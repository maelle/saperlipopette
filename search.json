[{"path":"https://maelle.github.io/saperlipopette/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 saperlipopette authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://maelle.github.io/saperlipopette/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maëlle Salmon. Maintainer, author.","code":""},{"path":"https://maelle.github.io/saperlipopette/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Salmon M (2023). saperlipopette: Create Example Git Messes. R package version 0.0.0.9000, https://github.com/maelle/saperlipopette, https://maelle.github.io/saperlipopette/.","code":"@Manual{,   title = {saperlipopette: Create Example Git Messes},   author = {Maëlle Salmon},   year = {2023},   note = {R package version 0.0.0.9000, https://github.com/maelle/saperlipopette},   url = {https://maelle.github.io/saperlipopette/}, }"},{"path":"https://maelle.github.io/saperlipopette/index.html","id":"saperlipopette","dir":"","previous_headings":"","what":"Create Example Git Messes","title":"Create Example Git Messes","text":"goal saperlipopette hold functions creating Git messes, users solve, follow https://ohshitgit.com/.","code":""},{"path":"https://maelle.github.io/saperlipopette/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Example Git Messes","text":"can install development version saperlipopette like :","code":"pak::pak(\"maelle/saperlipopette\")"},{"path":"https://maelle.github.io/saperlipopette/index.html","id":"why-this-name","dir":"","previous_headings":"","what":"Why this name?","title":"Create Example Git Messes","text":"package intended companion https://ohshitgit.com/, name honour exclamation. “saperlipopette” old-fashioned French exclamation. can say “Saperlipopette, Git!”.","code":""},{"path":"https://maelle.github.io/saperlipopette/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Create Example Git Messes","text":"basic example shows solve common problem: stage, user open newly created R project, messages indicate , URL follow, find corresponding ohshitgit entry. practice user change file, Git add , run git commit --amend ---edit. user examine Git history . need instructions initially provided, user can run: interface relies adding .Rprofile newly created project, instructions formatted cli package. ’ve set Git author, committer date automatic commits get hashes, can useful teaching group: everyone looking hashes machine, except commits create .","code":"library(\"saperlipopette\") parent_path <- withr::local_tempdir() path <- exo_one_small_change(parent_path) #> ℹ Follow along in /tmp/RtmpEbDkDo/file1d9362b79fc0/one-small-change! # what's in path fs::dir_tree(path) #> /tmp/RtmpEbDkDo/file1d9362b79fc0/one-small-change #> ├── R #> └── bla gert::git_log(repo = path) #> # A tibble: 2 × 6 #>   commit                          author time                files merge message #> * <chr>                           <chr>  <dttm>              <int> <lgl> <chr>   #> 1 2ff0d31f566e68ae0ee94b6028a3fa… Jane … 2023-12-15 16:25:00     1 FALSE \"feat:… #> 2 e227ecc55e421f70b6e30602e6a2ee… Jane … 2023-12-15 16:25:00     2 FALSE \"First… #> ✖ \"Oh shit, I committed and immediately realized I need to make one small change!\" #> ✖ I wanted to list 3 things in my bla file, not only two! #> ℹ See <https://ohshitgit.com/#change-last-commit> #> ℹ For more help use `tip()` tip() #> • Add 'thing 3' to the 'bla' file and save it. #> • Add 'bla' file to Git. #> • git commit --amend --no-edit #> • Examine Git history. parent_path <- withr::local_tempdir() path <- exo_one_small_change(parent_path) #> ℹ Follow along in /tmp/RtmpEbDkDo/file1d9362a797323/one-small-change! gert::git_log(repo = path) #> # A tibble: 2 × 6 #>   commit                          author time                files merge message #> * <chr>                           <chr>  <dttm>              <int> <lgl> <chr>   #> 1 2ff0d31f566e68ae0ee94b6028a3fa… Jane … 2023-12-15 16:25:00     1 FALSE \"feat:… #> 2 e227ecc55e421f70b6e30602e6a2ee… Jane … 2023-12-15 16:25:00     2 FALSE \"First… parent_path2 <- withr::local_tempdir() path2 <- exo_one_small_change(parent_path2) #> ℹ Follow along in /tmp/RtmpEbDkDo/file1d9364368d460/one-small-change! gert::git_log(repo = path2) #> # A tibble: 2 × 6 #>   commit                          author time                files merge message #> * <chr>                           <chr>  <dttm>              <int> <lgl> <chr>   #> 1 2ff0d31f566e68ae0ee94b6028a3fa… Jane … 2023-12-15 16:25:00     1 FALSE \"feat:… #> 2 e227ecc55e421f70b6e30602e6a2ee… Jane … 2023-12-15 16:25:00     2 FALSE \"First…"},{"path":"https://maelle.github.io/saperlipopette/reference/exo_committed_to_main.html","id":null,"dir":"Reference","previous_headings":"","what":"","title":"","text":"go https://ohshitgit.com/#accidental-commit-master","code":""},{"path":"https://maelle.github.io/saperlipopette/reference/exo_committed_to_main.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"","text":"","code":"exo_committed_to_main(parent_path)"},{"path":"https://maelle.github.io/saperlipopette/reference/exo_committed_to_main.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"","text":"parent_path Path create exercise repo","code":""},{"path":"https://maelle.github.io/saperlipopette/reference/exo_committed_to_main.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"","text":"path new project","code":""},{"path":"https://maelle.github.io/saperlipopette/reference/exo_committed_to_main.html","id":"git-commands","dir":"Reference","previous_headings":"","what":"Git commands","title":"","text":"git reset --hard, git branch, git checkout","code":""},{"path":"https://maelle.github.io/saperlipopette/reference/exo_committed_to_main.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"","text":"","code":"if (FALSE) { # interactive() parent_path <- withr::local_tempdir() path <- exo_committed_to_main(parent_path = parent_path) }"},{"path":"https://maelle.github.io/saperlipopette/reference/exo_latest_message.html","id":null,"dir":"Reference","previous_headings":"","what":"","title":"","text":"go https://ohshitgit.com/#change-last-commit-message","code":""},{"path":"https://maelle.github.io/saperlipopette/reference/exo_latest_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"","text":"","code":"exo_latest_message(parent_path)"},{"path":"https://maelle.github.io/saperlipopette/reference/exo_latest_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"","text":"parent_path Path create exercise repo","code":""},{"path":"https://maelle.github.io/saperlipopette/reference/exo_latest_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"","text":"path","code":""},{"path":"https://maelle.github.io/saperlipopette/reference/exo_latest_message.html","id":"git-commands","dir":"Reference","previous_headings":"","what":"Git commands","title":"","text":"git commit --amend","code":""},{"path":"https://maelle.github.io/saperlipopette/reference/exo_latest_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"","text":"","code":"if (FALSE) { # interactive() parent_path <- withr::local_tempdir() path <- exo_latest_message(parent_path = parent_path) }"},{"path":"https://maelle.github.io/saperlipopette/reference/exo_one_small_change.html","id":null,"dir":"Reference","previous_headings":"","what":"","title":"","text":"go https://ohshitgit.com/#change-last-commit","code":""},{"path":"https://maelle.github.io/saperlipopette/reference/exo_one_small_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"","text":"","code":"exo_one_small_change(parent_path)"},{"path":"https://maelle.github.io/saperlipopette/reference/exo_one_small_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"","text":"parent_path Path create exercise repo","code":""},{"path":"https://maelle.github.io/saperlipopette/reference/exo_one_small_change.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"","text":"path","code":""},{"path":"https://maelle.github.io/saperlipopette/reference/exo_one_small_change.html","id":"git-commands","dir":"Reference","previous_headings":"","what":"Git commands","title":"","text":"git commit --amend ---edit","code":""},{"path":"https://maelle.github.io/saperlipopette/reference/exo_one_small_change.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"","text":"","code":"if (FALSE) { # interactive() parent_path <- withr::local_tempdir() path <- exo_one_small_change(parent_path = parent_path) # Now add \"thing 3\" to the \"bla\" file # And amend the latest commit }"},{"path":"https://maelle.github.io/saperlipopette/reference/exo_split_changes.html","id":null,"dir":"Reference","previous_headings":"","what":"","title":"","text":"made many edits file, different places. much commit, since small commits best practice. need add changes Git bit bit. tool git add --patch, also available git add -p. changes presented one chunk git add --patch, choose \"s\" option splitting. See https://git-scm.com/book/en/v2/Git-Tools-Interactive-Staging#_staging_patches. Note patch also option git commit, prefer .","code":""},{"path":"https://maelle.github.io/saperlipopette/reference/exo_split_changes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"","text":"","code":"exo_split_changes(parent_path)"},{"path":"https://maelle.github.io/saperlipopette/reference/exo_split_changes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"","text":"parent_path Path create exercise repo","code":""},{"path":"https://maelle.github.io/saperlipopette/reference/exo_split_changes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"","text":"path new project","code":""},{"path":"https://maelle.github.io/saperlipopette/reference/exo_split_changes.html","id":"git-commands","dir":"Reference","previous_headings":"","what":"Git commands","title":"","text":"git add --patch, git add -p.","code":""},{"path":"https://maelle.github.io/saperlipopette/reference/exo_split_changes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"","text":"","code":"if (FALSE) { # interactive() parent_path <- withr::local_tempdir() path <- exo_split_changes(parent_path = parent_path) }"}]
